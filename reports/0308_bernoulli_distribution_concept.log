Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from plot import plot_bernoulli_pmf, plot_empirical_bernoulli

fig, axes = plt.subplots(1, 2, figsize=(8.4, 4.8), sharey=True, dpi=100)
plot_bernoulli_pmf(p=0.2, ax=axes[0])
plot_empirical_bernoulli(p=0.2, size=100, ax=axes[0])

plot_bernoulli_pmf(p=0.2, ax=axes[1])
plot_empirical_bernoulli(p=0.2, size=1000, ax=axes[1])

fig.supylabel("relative frequency")
fig.suptitle("Histogram of Bernoulli($p=0.2$) based on $100$ and $1000$ samples.")
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn [3], line 5[0m
[1;32m      3[0m fig, axes [38;5;241m=[39m plt[38;5;241m.[39msubplots([38;5;241m1[39m, [38;5;241m2[39m, figsize[38;5;241m=[39m([38;5;241m8.4[39m, [38;5;241m4.8[39m), sharey[38;5;241m=[39m[38;5;28;01mTrue[39;00m, dpi[38;5;241m=[39m[38;5;241m100[39m)
[1;32m      4[0m plot_bernoulli_pmf(p[38;5;241m=[39m[38;5;241m0.2[39m, ax[38;5;241m=[39maxes[[38;5;241m0[39m])
[0;32m----> 5[0m [43mplot_empirical_bernoulli[49m[43m([49m[43mp[49m[38;5;241;43m=[39;49m[38;5;241;43m0.2[39;49m[43m,[49m[43m [49m[43msize[49m[38;5;241;43m=[39;49m[38;5;241;43m100[39;49m[43m,[49m[43m [49m[43max[49m[38;5;241;43m=[39;49m[43maxes[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m)[49m
[1;32m      7[0m plot_bernoulli_pmf(p[38;5;241m=[39m[38;5;241m0.2[39m, ax[38;5;241m=[39maxes[[38;5;241m1[39m])
[1;32m      8[0m plot_empirical_bernoulli(p[38;5;241m=[39m[38;5;241m0.2[39m, size[38;5;241m=[39m[38;5;241m1000[39m, ax[38;5;241m=[39maxes[[38;5;241m1[39m])

File [0;32m~/work/gaohn-probability-stats/gaohn-probability-stats/content/plot.py:179[0m, in [0;36mplot_empirical_bernoulli[0;34m(p, size, ax)[0m
[1;32m    166[0m ax_kwargs [38;5;241m=[39m {
[1;32m    167[0m     [38;5;124m"[39m[38;5;124mtitle[39m[38;5;124m"[39m: [38;5;28;01mNone[39;00m,
[1;32m    168[0m     [38;5;124m"[39m[38;5;124mylabel[39m[38;5;124m"[39m: [38;5;28;01mNone[39;00m,
[1;32m    169[0m }
[1;32m    170[0m hist_kwargs [38;5;241m=[39m {
[1;32m    171[0m     [38;5;124m"[39m[38;5;124medgecolor[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124mblack[39m[38;5;124m"[39m,
[1;32m    172[0m     [38;5;124m"[39m[38;5;124mlinewidth[39m[38;5;124m"[39m: [38;5;241m2[39m,
[0;32m   (...)[0m
[1;32m    176[0m     [38;5;124m"[39m[38;5;124mlabel[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124mEmpirical Histogram[39m[38;5;124m"[39m,
[1;32m    177[0m }
[0;32m--> 179[0m hist [38;5;241m=[39m [43mplot_discrete_empirical_histogram[49m[43m([49m
[1;32m    180[0m [43m    [49m[43mX[49m[43m,[49m
[1;32m    181[0m [43m    [49m[43mstates[49m[38;5;241;43m=[39;49m[43mstates[49m[43m,[49m
[1;32m    182[0m [43m    [49m[43msize[49m[38;5;241;43m=[39;49m[43msize[49m[43m,[49m
[1;32m    183[0m [43m    [49m[43mbins[49m[38;5;241;43m=[39;49m[43mbins[49m[43m,[49m
[1;32m    184[0m [43m    [49m[43max[49m[38;5;241;43m=[39;49m[43max[49m[43m,[49m
[1;32m    185[0m [43m    [49m[43max_kwargs[49m[38;5;241;43m=[39;49m[43max_kwargs[49m[43m,[49m
[1;32m    186[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mhist_kwargs[49m[43m,[49m
[1;32m    187[0m [43m[49m[43m)[49m
[1;32m    188[0m [38;5;28;01mreturn[39;00m hist

File [0;32m~/work/gaohn-probability-stats/gaohn-probability-stats/content/plot.py:55[0m, in [0;36mplot_discrete_empirical_histogram[0;34m(distribution, states, size, bins, ax, ax_kwargs, **hist_kwargs)[0m
[1;32m     46[0m bins [38;5;241m=[39m np[38;5;241m.[39marange([38;5;241m0[39m, states[38;5;241m.[39mmax() [38;5;241m+[39m [38;5;241m1.5[39m) [38;5;241m-[39m [38;5;241m0.5[39m [38;5;28;01mif[39;00m bins [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m bins
[1;32m     47[0m [38;5;66;03m# print(f"Bins: {bins}")[39;00m
[1;32m     48[0m 
[1;32m     49[0m [38;5;66;03m# Matplotlib version.[39;00m
[0;32m   (...)[0m
[1;32m     53[0m [38;5;66;03m#     **hist_kwargs,[39;00m
[1;32m     54[0m [38;5;66;03m# )[39;00m
[0;32m---> 55[0m hist [38;5;241m=[39m [43msns[49m[38;5;241;43m.[39;49m[43mhistplot[49m[43m([49m[43mempirical_samples[49m[43m,[49m[43m [49m[43mbins[49m[38;5;241;43m=[39;49m[43mbins[49m[43m,[49m[43m [49m[43max[49m[38;5;241;43m=[39;49m[43max[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mhist_kwargs[49m[43m)[49m
[1;32m     57[0m ax[38;5;241m.[39mset_title(
[1;32m     58[0m     ax_kwargs[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mtitle[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mEmpirical Histogram/Distribution[39m[38;5;124m"[39m), fontsize[38;5;241m=[39m[38;5;241m16[39m
[1;32m     59[0m )
[1;32m     60[0m ax[38;5;241m.[39mset_xlabel(ax_kwargs[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mxlabel[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m), fontsize[38;5;241m=[39m[38;5;241m12[39m)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/seaborn/distributions.py:1432[0m, in [0;36mhistplot[0;34m(data, x, y, hue, weights, stat, bins, binwidth, binrange, discrete, cumulative, common_bins, common_norm, multiple, element, fill, shrink, kde, kde_kws, line_kws, thresh, pthresh, pmax, cbar, cbar_ax, cbar_kws, palette, hue_order, hue_norm, color, log_scale, legend, ax, **kwargs)[0m
[1;32m   1421[0m estimate_kws [38;5;241m=[39m [38;5;28mdict[39m(
[1;32m   1422[0m     stat[38;5;241m=[39mstat,
[1;32m   1423[0m     bins[38;5;241m=[39mbins,
[0;32m   (...)[0m
[1;32m   1427[0m     cumulative[38;5;241m=[39mcumulative,
[1;32m   1428[0m )
[1;32m   1430[0m [38;5;28;01mif[39;00m p[38;5;241m.[39munivariate:
[0;32m-> 1432[0m     [43mp[49m[38;5;241;43m.[39;49m[43mplot_univariate_histogram[49m[43m([49m
[1;32m   1433[0m [43m        [49m[43mmultiple[49m[38;5;241;43m=[39;49m[43mmultiple[49m[43m,[49m
[1;32m   1434[0m [43m        [49m[43melement[49m[38;5;241;43m=[39;49m[43melement[49m[43m,[49m
[1;32m   1435[0m [43m        [49m[43mfill[49m[38;5;241;43m=[39;49m[43mfill[49m[43m,[49m
[1;32m   1436[0m [43m        [49m[43mshrink[49m[38;5;241;43m=[39;49m[43mshrink[49m[43m,[49m
[1;32m   1437[0m [43m        [49m[43mcommon_norm[49m[38;5;241;43m=[39;49m[43mcommon_norm[49m[43m,[49m
[1;32m   1438[0m [43m        [49m[43mcommon_bins[49m[38;5;241;43m=[39;49m[43mcommon_bins[49m[43m,[49m
[1;32m   1439[0m [43m        [49m[43mkde[49m[38;5;241;43m=[39;49m[43mkde[49m[43m,[49m
[1;32m   1440[0m [43m        [49m[43mkde_kws[49m[38;5;241;43m=[39;49m[43mkde_kws[49m[43m,[49m
[1;32m   1441[0m [43m        [49m[43mcolor[49m[38;5;241;43m=[39;49m[43mcolor[49m[43m,[49m
[1;32m   1442[0m [43m        [49m[43mlegend[49m[38;5;241;43m=[39;49m[43mlegend[49m[43m,[49m
[1;32m   1443[0m [43m        [49m[43mestimate_kws[49m[38;5;241;43m=[39;49m[43mestimate_kws[49m[43m,[49m
[1;32m   1444[0m [43m        [49m[43mline_kws[49m[38;5;241;43m=[39;49m[43mline_kws[49m[43m,[49m
[1;32m   1445[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m   1446[0m [43m    [49m[43m)[49m
[1;32m   1448[0m [38;5;28;01melse[39;00m:
[1;32m   1450[0m     p[38;5;241m.[39mplot_bivariate_histogram(
[1;32m   1451[0m         common_bins[38;5;241m=[39mcommon_bins,
[1;32m   1452[0m         common_norm[38;5;241m=[39mcommon_norm,
[0;32m   (...)[0m
[1;32m   1462[0m         [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m   1463[0m     )

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/seaborn/distributions.py:575[0m, in [0;36m_DistributionPlotter.plot_univariate_histogram[0;34m(self, multiple, element, fill, common_norm, common_bins, shrink, kde, kde_kws, color, legend, line_kws, estimate_kws, **plot_kws)[0m
[1;32m    570[0m [38;5;28;01mif[39;00m element [38;5;241m==[39m [38;5;124m"[39m[38;5;124mbars[39m[38;5;124m"[39m:
[1;32m    571[0m 
[1;32m    572[0m     [38;5;66;03m# Use matplotlib bar plotting[39;00m
[1;32m    574[0m     plot_func [38;5;241m=[39m ax[38;5;241m.[39mbar [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mdata_variable [38;5;241m==[39m [38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m [38;5;28;01melse[39;00m ax[38;5;241m.[39mbarh
[0;32m--> 575[0m     artists [38;5;241m=[39m [43mplot_func[49m[43m([49m
[1;32m    576[0m [43m        [49m[43mhist[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43medges[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m    577[0m [43m        [49m[43mhist[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mheights[39;49m[38;5;124;43m"[39;49m[43m][49m[43m [49m[38;5;241;43m-[39;49m[43m [49m[43mbottom[49m[43m,[49m
[1;32m    578[0m [43m        [49m[43mhist[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mwidths[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m    579[0m [43m        [49m[43mbottom[49m[43m,[49m
[1;32m    580[0m [43m        [49m[43malign[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43medge[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    581[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43martist_kws[49m[43m,[49m
[1;32m    582[0m [43m    [49m[43m)[49m
[1;32m    584[0m     [38;5;28;01mfor[39;00m bar [38;5;129;01min[39;00m artists:
[1;32m    585[0m         [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mdata_variable [38;5;241m==[39m [38;5;124m"[39m[38;5;124mx[39m[38;5;124m"[39m:

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/matplotlib/__init__.py:1423[0m, in [0;36m_preprocess_data.<locals>.inner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1420[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m   1421[0m [38;5;28;01mdef[39;00m [38;5;21minner[39m(ax, [38;5;241m*[39margs, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1422[0m     [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1423[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43max[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;28;43mmap[39;49m[43m([49m[43msanitize_sequence[49m[43m,[49m[43m [49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1425[0m     bound [38;5;241m=[39m new_sig[38;5;241m.[39mbind(ax, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   1426[0m     auto_label [38;5;241m=[39m (bound[38;5;241m.[39marguments[38;5;241m.[39mget(label_namer)
[1;32m   1427[0m                   [38;5;129;01mor[39;00m bound[38;5;241m.[39mkwargs[38;5;241m.[39mget(label_namer))

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/matplotlib/axes/_axes.py:2454[0m, in [0;36mAxes.bar[0;34m(self, x, height, width, bottom, align, **kwargs)[0m
[1;32m   2445[0m [38;5;28;01mfor[39;00m l, b, w, h, c, e, lw, htch, lbl [38;5;129;01min[39;00m args:
[1;32m   2446[0m     r [38;5;241m=[39m mpatches[38;5;241m.[39mRectangle(
[1;32m   2447[0m         xy[38;5;241m=[39m(l, b), width[38;5;241m=[39mw, height[38;5;241m=[39mh,
[1;32m   2448[0m         facecolor[38;5;241m=[39mc,
[0;32m   (...)[0m
[1;32m   2452[0m         hatch[38;5;241m=[39mhtch,
[1;32m   2453[0m         )
[0;32m-> 2454[0m     [43mr[49m[38;5;241;43m.[39;49m[43m_internal_update[49m[43m([49m[43mkwargs[49m[43m)[49m
[1;32m   2455[0m     r[38;5;241m.[39mget_path()[38;5;241m.[39m_interpolation_steps [38;5;241m=[39m [38;5;241m100[39m
[1;32m   2456[0m     [38;5;28;01mif[39;00m orientation [38;5;241m==[39m [38;5;124m'[39m[38;5;124mvertical[39m[38;5;124m'[39m:

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/matplotlib/artist.py:1186[0m, in [0;36mArtist._internal_update[0;34m(self, kwargs)[0m
[1;32m   1179[0m [38;5;28;01mdef[39;00m [38;5;21m_internal_update[39m([38;5;28mself[39m, kwargs):
[1;32m   1180[0m     [38;5;124;03m"""[39;00m
[1;32m   1181[0m [38;5;124;03m    Update artist properties without prenormalizing them, but generating[39;00m
[1;32m   1182[0m [38;5;124;03m    errors as if calling `set`.[39;00m
[1;32m   1183[0m 
[1;32m   1184[0m [38;5;124;03m    The lack of prenormalization is to maintain backcompatibility.[39;00m
[1;32m   1185[0m [38;5;124;03m    """[39;00m
[0;32m-> 1186[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_update_props[49m[43m([49m
[1;32m   1187[0m [43m        [49m[43mkwargs[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;132;43;01m{cls.__name__}[39;49;00m[38;5;124;43m.set() got an unexpected keyword argument [39;49m[38;5;124;43m"[39;49m
[1;32m   1188[0m [43m        [49m[38;5;124;43m"[39;49m[38;5;132;43;01m{prop_name!r}[39;49;00m[38;5;124;43m"[39;49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/matplotlib/artist.py:1160[0m, in [0;36mArtist._update_props[0;34m(self, props, errfmt)[0m
[1;32m   1158[0m             func [38;5;241m=[39m [38;5;28mgetattr[39m([38;5;28mself[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mset_[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m   1159[0m             [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m callable(func):
[0;32m-> 1160[0m                 [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(
[1;32m   1161[0m                     errfmt[38;5;241m.[39mformat([38;5;28mcls[39m[38;5;241m=[39m[38;5;28mtype[39m([38;5;28mself[39m), prop_name[38;5;241m=[39mk))
[1;32m   1162[0m             ret[38;5;241m.[39mappend(func(v))
[1;32m   1163[0m [38;5;28;01mif[39;00m ret:

[0;31mAttributeError[0m: Rectangle.set() got an unexpected keyword argument 'density'
AttributeError: Rectangle.set() got an unexpected keyword argument 'density'

